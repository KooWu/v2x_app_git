/*
 * Copyright 2019 Steve Kwon <steve@libv2x.org>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "rclcpp/rclcpp.hpp"
#include "libv2x_msgs/msg/dl_unit_data_x_indication.hpp"

using namespace std::chrono_literals;
using namespace libv2x_msgs::msg;

const uint8_t Dot3BSM[522] = {
  0x0B, 0x02, 0x04, 0x01, 0x80, 0x0F, 0x01, 0x06, 0x00, 0x20, 0x81, 0xFE, 0x03, 0x81, 0x00, 0x40,
  0x03, 0x80, 0x81, 0xF8, 0x00, 0x14, 0x80, 0xF4, 0x40, 0x80, 0x00, 0x00, 0x00, 0x23, 0x26, 0x5A,
  0xD2, 0x74, 0x80, 0x35, 0xA4, 0xE8, 0xFF, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00,
  0x00, 0x7E, 0x7D, 0x07, 0xD0, 0x7F, 0x7F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x02, 0x03, 0x31,
  0xE0, 0x10, 0x0B, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00,
  0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40,
  0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x40, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00, 0x00,
  0x00, 0x40, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40, 0x00,
  0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x40,
  0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00,
  0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00,
  0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01,
  0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
  0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x10, 0x00, 0x40, 0x01, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x01, 0x01, 0x80, 0x03, 0x01, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0xA9, 0x83, 0x01, 0x03,
  0x80, 0x00, 0x7C, 0x80, 0x01, 0xE4, 0x80, 0x03, 0x48, 0x01, 0x03, 0x00, 0x01, 0x20, 0x00, 0x01,
  0x28, 0x00, 0x01, 0x7F, 0x81, 0x82, 0xA0, 0x7F, 0xAE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xED,
  0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x7D, 0xAE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

class Ieee1609Dot3_DevEmu : public rclcpp::Node
{
public:
  Ieee1609Dot3_DevEmu() : Node("ieee1609dot3_devemu"), m_seq(0)
  {
    m_pub   = this->create_publisher<DLUnitDataXIndication>(
      "IEEE1609Dot3/DLUnitDataX/Indication", m_qos);
    m_timer = this->create_wall_timer(1000ms,
      std::bind(&Ieee1609Dot3_DevEmu::timer_callback, this));
  }

private:
  rclcpp::Publisher<DLUnitDataXIndication>::SharedPtr m_pub;
  rclcpp::SystemDefaultsQoS m_qos;
  rclcpp::TimerBase::SharedPtr m_timer;

  uint64_t m_seq;

  void timer_callback()
  {
    auto msg = DLUnitDataXIndication();

    msg.data.resize(522);
    memcpy(&msg.data[0], Dot3BSM, 522);
    msg.msg_header.ts = rclcpp::Clock().now();

    this->m_pub->publish(msg);
    this->m_seq++;

    RCLCPP_DEBUG(this->get_logger(), "ieee1609dot3_devemu: %ld.%09ld",
      msg.msg_header.ts.sec, msg.msg_header.ts.nanosec);
  }
};

int main(int argc, char *argv[])
{
  rclcpp::init(argc, argv);
  rclcpp::spin(std::make_shared<Ieee1609Dot3_DevEmu>());
  rclcpp::shutdown();

  return 0;
}
